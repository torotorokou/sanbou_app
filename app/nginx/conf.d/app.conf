## Upstreams
## Compose ネットワーク内ではサービス名で名前解決できるためシンプルに定義
upstream ai_api      { server ai_api:8000; }
upstream ledger_api  { server ledger_api:8000; }
upstream sql_api     { server sql_api:8000; }
upstream rag_api     { server rag_api:8000; }

# Common server block template (HTTP)
server {
    listen 80;
    # 任意の Host (LAN IP / ローカル) を受け付けるため server_name をワイルドカード運用
    server_name _;

    # 静的フロント (React dist) ルート設定
    root /usr/share/nginx/html;
    index index.html;

    # SPAフォールバック
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ===================== API Proxy =====================
    # 旧 /api/<service>/ と /<service>/ のどちらでもアクセス可能にし、rewrite で 301 を出さずメソッド保持
    # (permanent リダイレクトは POST→GET 化を招いたため撤去)
    location ~ ^/(api/)?ai_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://ai_api;
    }
    # ledger_api は FastAPI root_path=/ledger_api を保持させるため末尾スラなし
    location ~ ^/(api/)?ledger_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://ledger_api;
    }
    location ~ ^/(api/)?sql_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://sql_api;
    }
    location ~ ^/(api/)?rag_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://rag_api;
    }
    # /api/<service>/ を /<service>/ へ内部再書換 (ログと UI 表示の統一用) ※内部 (last) なので 301/302 無し
    rewrite ^/api/(ai_api|ledger_api|sql_api|rag_api)/(.*)$ /$1/$2 last;
    # 直接 swagger (/docs) に来た場合: ledger_api の /ledger_api/docs を参照できるよう 2 パターン許可
    location = /docs { rewrite ^ /ledger_api/docs last; }
}

# Staging host
## 2つ目の server ブロックは不要になったため削除 (単一設定でホスト名問わず応答)

# Optional HTTPS skeleton (certs mounting expected under /etc/nginx/certs)
server {
    listen 443 ssl;
    server_name _;
    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    root /usr/share/nginx/html;
    index index.html;
    location / { try_files $uri $uri/ /index.html; }
    location ~ ^/(api/)?ai_api/ { include /etc/nginx/conf.d/_proxy_headers.conf; include /etc/nginx/conf.d/_proxy_ws.conf; proxy_pass http://ai_api; }
    location ~ ^/(api/)?ledger_api/ { include /etc/nginx/conf.d/_proxy_headers.conf; include /etc/nginx/conf.d/_proxy_ws.conf; proxy_pass http://ledger_api; }
    location ~ ^/(api/)?sql_api/ { include /etc/nginx/conf.d/_proxy_headers.conf; include /etc/nginx/conf.d/_proxy_ws.conf; proxy_pass http://sql_api; }
    location ~ ^/(api/)?rag_api/ { include /etc/nginx/conf.d/_proxy_headers.conf; include /etc/nginx/conf.d/_proxy_ws.conf; proxy_pass http://rag_api; }
    rewrite ^/api/(ai_api|ledger_api|sql_api|rag_api)/(.*)$ /$1/$2 last;
    location = /docs { rewrite ^ /ledger_api/docs last; }
}
