## Upstreams (frontend は静的配信へ移行したため削除)
# docker-compose.yml では stg-* / prod-* のサービス名を使用しているため、
# 本ファイル（共通マウント）ではまず stg-* 名称に合わせる。
# ※ prod 用に使用する場合は prod-* に書き換えるか、envsubst 等でテンプレ化する運用を推奨。
upstream ai_api      { server stg-ai_api:8000; }
upstream ledger_api  { server stg-ledger_api:8000; }
upstream sql_api     { server stg-sql_api:8000; }
upstream rag_api     { server stg-rag_api:8000; }

# Common server block template (HTTP)
server {
    listen 80;
    # 任意の Host (LAN IP / ローカル) を受け付けるため server_name をワイルドカード運用
    server_name _;

    # 静的フロント (React dist) ルート設定
    root /usr/share/nginx/html;
    index index.html;

    # SPAフォールバック
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API (共通プレフィックス /api/<service>/ )
    location /api/ai_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        # upstream ai_api -> stg-ai_api:8000
        proxy_pass http://ai_api/;
    }
    location /api/ledger_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://ledger_api/; # upstream ledger_api -> stg-ledger_api:8000
    }
    location /api/sql_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://sql_api/; # upstream sql_api -> stg-sql_api:8000
    }
    location /api/rag_api/ {
        include /etc/nginx/conf.d/_proxy_headers.conf;
        include /etc/nginx/conf.d/_proxy_ws.conf;
        proxy_pass http://rag_api/; # upstream rag_api -> stg-rag_api:8000
    }

    # --- 互換リダイレクト (旧: /ai_api/... → /api/ai_api/...) 必要なければ削除可 ---
    rewrite ^/ai_api/(.*)$ /api/ai_api/$1 permanent;
    rewrite ^/ledger_api/(.*)$ /api/ledger_api/$1 permanent;
    rewrite ^/sql_api/(.*)$ /api/sql_api/$1 permanent;
    rewrite ^/rag_api/(.*)$ /api/rag_api/$1 permanent;
}

# Staging host
## 2つ目の server ブロックは不要になったため削除 (単一設定でホスト名問わず応答)

# Optional HTTPS skeleton (certs mounting expected under /etc/nginx/certs)
server {
    listen 443 ssl;
    server_name app.local stg.app.local;
    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    # Basic redirect to HTTP until certs are set properly (or proxy similarly as above)
    return 301 http://$host$request_uri;
}
